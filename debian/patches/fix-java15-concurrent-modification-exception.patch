From 97eb299a8b4b3d1b199b30d98769136494e2469d Mon Sep 17 00:00:00 2001
From: BJ Hargrave <bj@bjhargrave.com>
Date: Fri, 10 Apr 2020 13:51:59 -0400
Subject: [PATCH] jar: Replace incorrect use of computeIfAbsent in putResource

We may need to make multiple modifications to the directories map when
adding a resource. computeIfAbsent does not allow the mapping function
to modify the map.

Fixes https://github.com/bndtools/bnd/issues/3903

Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
---
 biz.aQute.bndlib/src/aQute/bnd/osgi/Jar.java | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)


From b5092a473176327e745307afc573ae7a58d27bf8 Mon Sep 17 00:00:00 2001
From: BJ Hargrave <bj@bjhargrave.com>
Date: Fri, 10 Apr 2020 13:48:54 -0400
Subject: [PATCH] jar: Fix getPackages to handle non-null empty directory

Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
---
 biz.aQute.bndlib.tests/test/test/JarTest.java | 77 +++++++++++++++----
 biz.aQute.bndlib/src/aQute/bnd/osgi/Jar.java  |  3 +-
 2 files changed, 64 insertions(+), 16 deletions(-)

--- a/biz.aQute.bndlib/src/aQute/bnd/osgi/Jar.java
+++ b/biz.aQute.bndlib/src/aQute/bnd/osgi/Jar.java
@@ -334,7 +334,11 @@
 		} else if (path.equals(Constants.MODULE_INFO_CLASS)) {
 			moduleAttribute = null;
 		}
-		Map<String, Resource> s = directories.computeIfAbsent(getParent(path), dir -> {
+		String dir = getParent(path);
+		Map<String, Resource> s = directories.get(dir);
+		if (s == null) {
+			s = new TreeMap<>();
+			directories.put(dir, s);
 			// make ancestor directories
 			for (int n; (n = dir.lastIndexOf('/')) > 0;) {
 				dir = dir.substring(0, n);
@@ -342,8 +346,7 @@
 					break;
 				directories.put(dir, null);
 			}
-			return new TreeMap<>();
-		});
+		}
 		boolean duplicate = s.containsKey(path);
 		if (!duplicate || overwrite) {
 			resources.put(path, resource);
@@ -995,7 +998,8 @@
 	public List<String> getPackages() {
 		check();
 		return MapStream.of(directories)
-			.filterValue(Objects::nonNull)
+			.filterValue(mdir -> Objects.nonNull(mdir) && !mdir
+				.isEmpty())
 			.keys()
 			.map(k -> k.replace('/', '.'))
 			.collect(toList());
